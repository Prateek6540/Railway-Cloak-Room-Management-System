package railwaycloakroommangement;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.*;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author prate
 */
public class bookLocker extends javax.swing.JFrame {

    Connection connection = null;
    PreparedStatement prp = null;
    ResultSet result = null;
    DefaultTableModel Table = new DefaultTableModel();
    String dest = null;
    String source = null;
    LocalDateTime a_time ;
                LocalDateTime d_time;
    /**
     * Connection connection = null;
     *
     * /**
     * Creates new form bookLocker
     */
    String uid;
    int pnr;

    public bookLocker() {
        initComponents();
    }

    public bookLocker(String userid) {
        initComponents();
        uid = userid;
    }
    public bookLocker(int pnr) {
        initComponents();
        connection = connector.ConnectDB();
        
        
        Object columns[] = {"Arival Sation", "Destination Sation"};
        Table.setColumnIdentifiers(columns);
        jTable1.setModel(Table);
        getStation(pnr);

        
    }
    
    
    
    
    public bookLocker(String uid,int pnr){
        initComponents();
        this.pnr = pnr;
        this.uid =uid;
        connection = connector.ConnectDB();
        
        
        Object columns[] = {"Arival Sation", "Destination Sation"};
        Table.setColumnIdentifiers(columns);
        jTable1.setModel(Table);
        getStation(pnr);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 102, 51,80));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton4.setBackground(new java.awt.Color(0, 51, 255));
        jButton4.setText("Book here");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, 90, 30));

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel2.setText("BOOK LOCKER");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 220, -1));

        jButton3.setBackground(new java.awt.Color(51, 51, 255));
        jButton3.setText("check");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, 130, 20));

        jLabel6.setText("Enter PNR number");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(71, 70, 110, 32));

        jButton1.setBackground(new java.awt.Color(51, 102, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 16, -1, -1));

        jTextField1.setBackground(new java.awt.Color(255, 153, 0));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 150, 20));

        jButton2.setBackground(new java.awt.Color(0, 51, 255));
        jButton2.setText("Book here");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 100, 30));

        jTable1.setBackground(new java.awt.Color(255, 153, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 100, 460, 120));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, 540, 350));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/420210.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1909, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        connection = connector.ConnectDB();
    
    String pnrst = jTextField1.getText();
    if (pnrst.isEmpty()) {
            
            JOptionPane.showMessageDialog(null, "PNR cannot be empty");
            return;
        }

        int pnrno = Integer.parseInt(pnrst);
    pnr = pnrno;
    Object columns[] = {"Arival Sation", "Destination Sation"};
    Table.setColumnIdentifiers(columns);
    
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        model.setColumnIdentifiers(columns);

    jTable1.setModel(Table);
    getStation(pnrno);
    }//GEN-LAST:event_jButton3ActionPerformed

   public void getTable(int pnr){
       connection = connector.ConnectDB();
        
        
        Object columns[] = {"Sation id", "Seat available"};
        Table.setColumnIdentifiers(columns);
        jTable1.setModel(Table);
        getStation(pnr);
   }
    public void getStation(int pnrno) {
        connection = connector.ConnectDB();
        String sql = "select destination_station,source_station,a_time,d_time from pnr_details where pnr = ?";

        try {
            prp = connection.prepareStatement(sql);
            prp.setInt(1, pnrno);
            result = prp.executeQuery();

            Object columnData[] = new Object[2];
            while (result.next()) {
                source = result.getString("source_station");
                dest = result.getString("destination_station");
                 a_time = result.getObject("a_time",LocalDateTime.class);
                  d_time = result.getObject("d_time",LocalDateTime.class);
                  DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                  
                System.out.println(a_time);
                columnData[0] = source;
                columnData[1] = dest;

                Table.addRow(columnData);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        userHome al = new userHome(uid);
        al.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        LocalDateTime currentTime = LocalDateTime.now();
        Duration duration = Duration.between(currentTime,d_time );
        System.out.println("imahere"+duration);
      
        long daysDiff = duration.toDays();
        System.out.println("Days diff"+daysDiff);
        long hoursDiff = duration.toHours() % 24;
        long minutesDiff = duration.toMinutes() % 60;
        long secondsDiff = duration.getSeconds() % 60;
        System.out.println("Duration: " + daysDiff + " days, " + hoursDiff + " hours, " + minutesDiff + " minutes, " + secondsDiff + " seconds");
        if(daysDiff <0 && hoursDiff <2){
            JOptionPane.showMessageDialog(null, "The locker should be booked beore 2 hr of train departure");
        }
        else{
//            JOptionPane.showMessageDialog(null, "Duration: " + daysDiff + " days, " + hoursDiff + " hours, " + minutesDiff + " minutes, " + secondsDiff + " seconds");
        bookingPage book = new bookingPage(uid, source, pnr);
        book.setVisible(true);
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
         LocalDateTime currentTime = LocalDateTime.now();
//        Duration duration = Duration.between(currentTime,a_time);
//        System.out.println("imahere"+duration);
//      
//        long daysDiff = duration.toDays();
//        System.out.println("Days diff"+daysDiff);
//        long hoursDiff = duration.toHours() % 24;
//        long minutesDiff = duration.toMinutes() % 60;
//        long secondsDiff = duration.getSeconds() % 60;
//        System.out.println("Duration: " + daysDiff + " days, " + hoursDiff + " hours, " + minutesDiff + " minutes, " + secondsDiff + " seconds");
//        if(daysDiff >=0 || hoursDiff >24){
//            JOptionPane.showMessageDialog(null, "The locker cannot be booked after 24hr of your arival");
//        }
//        else{
//            JOptionPane.showMessageDialog(null, "Duration: " + daysDiff + " days, " + hoursDiff + " hours, " + minutesDiff + " minutes, " + secondsDiff + " seconds");
        bookingPage book = new bookingPage(uid, dest, pnr);
        book.setVisible(true);
//       }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bookLocker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bookLocker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bookLocker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bookLocker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bookLocker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
